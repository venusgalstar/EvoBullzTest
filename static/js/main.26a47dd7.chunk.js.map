{"version":3,"sources":["menu/ScrollToTop.js","utilities/isEmpty.js","store/actions/action.types.js","store/reducers/auth.reducers.js","store/reducers/nft.reducers.js","store/reducers/index.js","store/index.js","config.js","store/actions/auth.actions.js","store/actions/nft.actions.js","interactWithSmartContract/index.js","menu/header.js","pages/home.js","pages/staking.js","App.js","reportWebVitals.js","index.js"],"names":["ScrollToTop","props","state","is_visible","scrollComponent","this","document","addEventListener","e","toggleVisibility","window","pageYOffset","setState","scrollTo","top","behavior","id","className","onClick","scrollToTop","Component","isEmpty","value","undefined","Object","keys","length","trim","AUTH_SUCCESS","AUTH_LOGOUT","GET_USER_DETAIL","SET_WALLET_ADDR","SET_CHAIN_ID","SET_OTHER_USER_DETAIL","UPDATE_USER_BALANCE","UPDATE_WALLET_STATUS","SET_TOTAL_REWARD","UPDATE_MINTED_NFT_COUNT","SET_SERVICE_FEE","SET_NFT_TRADING_RESULT","SET_STAKED_NFT_LIST","SET_AVAX_PRICE","SET_EVO_NFT_LIST","auth","user","currentWallet","currentChainId","otherUser","balance","walletStatus","mintedNFTCount","init","serviceFee","tradingResult","evoList","stakedList","totalReward","reducers","combineReducers","action","type","payload","detail","nft","console","log","store","createStore","composeWithDevTools","applyMiddleware","thunk","evoNFT_abi","require","evoManager_abi","config","baseUrl","socketUrl","imgUrl","chainId","ipfsUrl","mainNetUrl","testNetUrl","EvoNFTContractAddress","EvoTokenContractAddress","EvoManagerContractAddress","MoralisAPIKey","EvoNFTContractAbi","EvoTokenContractAbi","EvoManagerContractAbi","NFT_MAX_MINT","MINTING_FEE_PER_NFT","setConnectedWalletAddress","address","dispatch","setConnectedChainId","updateBalanceOfUser","setWalletStatus","status","updateMintedNFTCountAfterTrading","count","updateEvoNFTList","items","a","updateStakedNFTList","setNFTTradingResult","functionName","success","message","function","emptyNFTTradingResult","updateTotalReward","loadWeb3","ethereum","web3","Web3","eth","handleRevert","givenProvider","on","checkNetworkById","getChainId","then","error","accounts","checkNetwork","utils","toHex","changeNetwork","cid","request","method","params","code","chainName","rpcUrls","connectWallet","addressArray","obj","target","rel","href","updateUserBalanceAfterTrading","currentAddr","getBalance","balanceOfUser","fromWei","parseErrorMsg","errMsg","returStr","startPos","JSON","stringify","search","subStr","substring","endPos","indexOf","mintMultipleNFT","fee","Contract","EvoManagerContract","minting_fee","toWei","toString","methods","estimateGas","from","gasFee","gasPrice","send","stake","tokenUris","EvoNFTContract","approve","toBN","Number","staking","getStakingInfoOfUser","evoManagerContract","call","queryRet","evoNftIds","evoRewardsOfNfts","evoNftUris","list","k","tempReward","axios","get","metadata","push","token_id","reward","token_uri","data","getUsersEvoNFTs","account","headers","res","result","nftlist","nftItems","tokenIds","forEach","item","token_address","toLowerCase","getTokenURIsFromIds","unstake","claim","getMintedNFTCount","connectTheme","createTheme","palette","primary","main","Header","useState","compressedAddress","setCompressedAddress","useSelector","useDispatch","ConnectWallet","connection","useEffect","compAddress","style","justifyContent","ThemeProvider","theme","Button","variant","color","mintTheme","loadmapTheme","PrettoSlider","styled","Slider","height","border","width","backgroundColor","borderRadius","transform","boxShadow","display","lineHeight","fontSize","background","padding","transformOrigin","Home","updateListTimer","setCount","mintedCount","setMitedCount","nftOperationResult","navigate","useNavigate","NotificationManager","setTimeout","marginBottom","flexWrap","position","src","alt","toFixed","valueLabelDisplay","defaultValue","min","max","onChange","event","newValue","counts2mint","warning","textDecoration","marginTop","flexDirection","textAlign","Staking","evoItems","stakedItems","clearInterval","setInterval","onClickStake","tokenId","onClickUnstake","onClickClaim","fontWeight","fontFamily","marginLeft","marginRight","map","index","margin","paddingBottom","name","image","alignItems","GlobalStyles","createGlobalStyle","ScrollTop","children","location","React","PosedRouter","key","app","path","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.26a47dd7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class ScrollToTop extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      is_visible: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var scrollComponent = this;\r\n    document.addEventListener(\"scroll\", function(e) {\r\n      scrollComponent.toggleVisibility();\r\n    });\r\n  }\r\n\r\n  toggleVisibility() {\r\n    if (window.pageYOffset > 600) {\r\n      this.setState({\r\n        is_visible: true\r\n      });\r\n    } else { this.setState({\r\n        is_visible: false\r\n      });\r\n    }\r\n  }\r\n\r\n  scrollToTop() {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { is_visible } = this.state;\r\n    return (\r\n      <div id='scroll-to-top' className='init'>\r\n        {is_visible && (\r\n          <div onClick={() => this.scrollToTop()}>\r\n            <i className=\"\"></i>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const isEmpty = value => \r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n    (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default isEmpty;","export const AUTH_SUCCESS=\"AUTH_SUCCESS\";\r\nexport const AUTH_LOGOUT=\"AUTH_LOGOUT\";\r\nexport const CURRENT_USER=\"GET_CURRENT_USER\";\r\nexport const GET_USER_DETAIL=\"GET_USER_DETAIL\";\r\nexport const SET_WALLET_ADDR = \"SET_WALLET_ADDR\";\r\nexport const SET_CHAIN_ID = \"SET_CHAIN_ID\";\r\nexport const SET_OTHER_USER_DETAIL = \"SET_OTHER_USER_DETAIL\";\r\nexport const UPDATE_USER_BALANCE = \"UPDATE_USER_BALANCE\";\r\nexport const UPDATE_WALLET_STATUS = \"UPDATE_WALLET_STATUS\";\r\nexport const SET_TOTAL_REWARD = \"SET_TOTAL_REWARD\";\r\nexport const UPDATE_MINTED_NFT_COUNT = \"UPDATE_MINTED_NFT_COUNT\";\r\n\r\nexport const UPDATE_NFT_BANNER_LIST = \"UPDATE_NFT_BANNER_LIST\";\r\nexport const UPDATE_HOT_BID_LIST = \"UPDATE_HOT_BID_LIST\";\r\nexport const UPDATE_HOT_COLLECTION_LIST = \"UPDATE_HOT_COLLECTION_LIST\";\r\nexport const UPDATE_COLLECTION_LIST = \"UPDATE_COLLECTION_LIST\";\r\nexport const UPDATE_COLLECTION_BANNER_LIST = \"UPDATE_COLLECTION_BANNER_LIST\";\r\nexport const GET_COLLECTION_DETAIL = \"GET_COLLECTION_DETAIL\";\r\nexport const BUY_COLLECTION_SUCCESS = \"BUY_COLLECTION_SUCCESS\";\r\nexport const SET_CONSIDERING_COLLECTION_ID = \"SET_CONSIDERING_COLLECTION_ID\";\r\n\r\nexport const UPDATE_ITEMS_OF_COLLECTION = \"UPDATE_ITEMS_OF_COLLECTION\";\r\n\r\nexport const GET_HOT_COLLECTION = \"GET_HOT_COLLECTION\";\r\n\r\nexport const BID_SUCCESS = \"BID_SUCCESS\";\r\nexport const BID_FAILED = \"BID_FAILED\";\r\nexport const UPDATE_SERVER_TIME = \"UPDATE_SERVER_TIME\";\r\n\r\nexport const SET_SERVICE_FEE = \"SET_SERVICE_FEE\";\r\nexport const GET_NFT_DETAIL = \"GET_NFT_DETAIL\";\r\nexport const BUY_NFT_SUCCESS = \"BUY_NFT_SUCCESS\";\r\nexport const UPDATE_POPULAR_USERS = \"UPDATE_POPULAR_USERS\";\r\nexport const SET_NFT_TRADING_RESULT = \"SET_NFT_TRADING_RESULT\";\r\nexport const SET_STAKED_NFT_LIST = \"SET_STAKED_NFT_LIST\";\r\n\r\nexport const UPDATE_ITEMS_OF_USER_BY_CONDITION = \"UPDATE_ITEMS_OF_USER_BY_CONDITION\";\r\n\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILED = \"FOLLOW_FAILED\";\r\nexport const UPDATE_FOLLOW_LIST = \"UPDATE_FOLLOW_LIST\";\r\nexport const UPDATE_FOLLOWING_LIST = \"UPDATE_FOLLOWING_LIST\";\r\nexport const IS_FOLLOWING_EXISTS = \"IS_FOLLOWING_EXISTS\";\r\n\r\nexport const UPLOAD_CREATE=\"UPLOAD_CREATE\";\r\nexport const UPLOAD_UPDATE=\"UPLOAD_UPDATE\";\r\nexport const UPLOAD_DELETE=\"UPLOAD_DELETE\";\r\nexport const UPLOAD_CREATE_FAILL=\"UPLOAD_CREATE_FAILL\";\r\nexport const UPLOAD_CREATE_SUCCESS=\"UPLOAD_CREATE_SUCCESS\";\r\n\r\nexport const GET_UPLOADED_NFTS_SUCCESS = \"GET_UPLOADED_NFTS_SUCCESS\";\r\nexport const GET_UPLOADED_NFTS_FAIL = \"GET_UPLOADED_NFTS_FAIL\";\r\n\r\nexport const UPLOAD_CREATE_BID = \"UPLOAD_CREATE_BID\";\r\nexport const UPLOAD_CREATE_BID_FAIL = \"UPLOAD_CREATE_BID_FAIL\";\r\nexport const UPLOAD_CREATE_BID_SUCCESS = \"UPLOAD_CREATE_BID_SUCCESS\";\r\n\r\nexport const GET_NFT_BID_SUCCESS = \"GET_NFT_BID_SUCCESS\";\r\nexport const GET_NFT_BID_FAIL = \"GET_NFT_BID_FAIL\";\r\nexport const UPDATE_NOTIFY_LIST = \"UPDATE_NOTIFY_LIST\";\r\nexport const MARK_ALL_NOTIFIES_AS_READ = \"MARK_ALL_NOTIFIES_AS_READ\";\r\nexport const GET_NOTIFIES_BY_FILTERS = \"GET_NOTIFIES_BY_FILTERS\";\r\n\r\n\r\nexport const SET_AVAX_PRICE = \"SET_AVAX_PRICE\";\r\nexport const SET_THEME_THEME = \"SET_THEME_THEME\";\r\n\r\nexport const SET_EVO_NFT_LIST = \"SET_EVO_NFT_LIST\";\r\n","import { AUTH_LOGOUT, AUTH_SUCCESS, GET_USER_DETAIL, SET_WALLET_ADDR, UPDATE_MINTED_NFT_COUNT, UPDATE_WALLET_STATUS, SET_AVAX_PRICE, UPDATE_USER_BALANCE, SET_OTHER_USER_DETAIL, SET_CHAIN_ID, CURRENT_USER } from \"../actions/action.types\";\r\n\r\nconst auth = {\r\n    user: {},\r\n    currentWallet: \"\",\r\n    currentChainId: \"\",\r\n    otherUser: {},\r\n    balance: 0,\r\n    walletStatus: false,\r\n    mintedNFTCount: 0\r\n}\r\n\r\nexport function Auth(state = auth, action) \r\n{\r\n    switch (action.type) {\r\n        case UPDATE_MINTED_NFT_COUNT:\r\n            return {\r\n                ...state, mintedNFTCount: action.payload\r\n            }\r\n        case SET_AVAX_PRICE:\r\n            return {...state, ...action.payload};\r\n        case AUTH_SUCCESS:\r\n\r\n            // console.log(\"[AUTH_SUCCESS reducer] payload = \", action.payload);\r\n\r\n            return { ...state, user: action.payload };\r\n        case AUTH_LOGOUT:\r\n            // localStorage.removeItem(\"jwtToken\");\r\n            return { ...state, user: action.payload };\r\n        case GET_USER_DETAIL:\r\n            return {\r\n                ...state, detail: action.payload\r\n            }\r\n        case SET_WALLET_ADDR:\r\n            // console.log(\"[REDUCER] address  = \", action.payload);\r\n            return {\r\n                ...state, currentWallet: action.payload\r\n            }\r\n        case SET_CHAIN_ID:\r\n            // console.log(\"[REDUCER] chainId  = \", action.payload);\r\n            return {\r\n                ...state, currentChainId: action.payload\r\n            }\r\n        case SET_OTHER_USER_DETAIL:\r\n            // console.log(\"[REDUCER] SET_OTHER_USER_DETAIL  = \", action.payload);\r\n            {\r\n                return { ...state, otherUser: action.payload }\r\n            }\r\n        case UPDATE_USER_BALANCE:            \r\n            return { ...state, balance: action.payload };\r\n        case UPDATE_WALLET_STATUS:\r\n            return {...state, walletStatus: action.payload };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport function GetCurrentUser(state, action) {\r\n    if (action.type === CURRENT_USER) {\r\n        return state.user;\r\n    }\r\n}\r\n","import { SET_SERVICE_FEE,  SET_EVO_NFT_LIST, SET_NFT_TRADING_RESULT, SET_STAKED_NFT_LIST, SET_TOTAL_REWARD } from \"../actions/action.types\";\r\n\r\nconst init = {\r\n    serviceFee: 1.5,   //percentage value 1.5 means 1.5%,\r\n    tradingResult: null,\r\n    evoList: null,\r\n    stakedList: null,\r\n    totalReward: 0\r\n}\r\n\r\nexport default function Nft(state = init, action) {\r\n    switch(action.type) {\r\n        case SET_TOTAL_REWARD:\r\n            return {\r\n                ...state, totalReward: action.payload\r\n            }\r\n        case SET_STAKED_NFT_LIST:\r\n            return {\r\n                ...state, stakedList: action.payload\r\n            }\r\n        case SET_EVO_NFT_LIST:\r\n            console.log(\"[SET_EVO_NFT_LIST] action.payload = \", action.payload)\r\n            return {\r\n                ...state, evoList: action.payload\r\n            }\r\n        case SET_SERVICE_FEE:\r\n            return {\r\n                ...state, serviceFee: action.payload\r\n            }\r\n        case SET_NFT_TRADING_RESULT:\r\n            // console.log(\"[SET_NFT_TRADING_RESULT Reducer ] payload = \", action.payload)\r\n            return {\r\n                ...state, tradingResult: action.payload\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport {Auth} from \"./auth.reducers\";\r\nimport Nft from \"./nft.reducers\";\r\n\r\nconst reducers = combineReducers({\r\n    auth: Auth,\r\n    nft: Nft,\r\n})\r\n\r\nexport default reducers;\r\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n    // other store enhancers if any\r\n  )\r\n);\r\n\r\n// const store = createStore(\r\n//     reducers,\r\n//     applyMiddleware(\r\n//         thunk\r\n//     )\r\n// );\r\n\r\nexport default store;","var evoNFT_abi = require(\"./interactWithSmartContract/EvoBullNFT.json\");\r\nvar evoManager_abi = require(\"./interactWithSmartContract/EvoManager.json\");\r\nvar evoToken_abi = require(\"./interactWithSmartContract/EvoToken.json\");\r\nvar config = {\r\n    baseUrl: \"http://192.168.103.53/api/\",    \r\n    socketUrl: \"http://192.168.103.53\",\r\n    imgUrl: \"http://192.168.103.53/uploads/\",\r\n    chainId: 97, //Cronos testnet : 338, Cronos mainnet : 25,   bsctestnet : 97\r\n    ipfsUrl: 'https://ipfs.infura.io/ipfs/',\r\n    mainNetUrl: 'https://evm-cronos.crypto.org/',\r\n    testNetUrl:  \"https://data-seed-prebsc-1-s2.binance.org:8545/\", \r\n    EvoNFTContractAddress : \"0x11148a52923f369e3Dde4979712D5583377F33e8\", \r\n    EvoTokenContractAddress : \"0x003DC66C355f8296902835d0a80F927fC3bBF58D\",\r\n    EvoManagerContractAddress : \"0x5fb87504cd872470bfc5e49544f1e5e6870004eA\",\r\n    MoralisAPIKey: \"YEEwMh0B4VRg6Hu5gFQcKxqinJ7UizRza1JpbkyMgNTfj4jUkSaZVajOxLNabvnt\",\r\n    EvoNFTContractAbi : evoNFT_abi,\r\n    EvoTokenContractAbi : evoToken_abi,\r\n    EvoManagerContractAbi : evoManager_abi, \r\n    NFT_MAX_MINT: 100,\r\n    MINTING_FEE_PER_NFT: 0.05\r\n}\r\n\r\nexport default config;\r\n","import { AUTH_LOGOUT, AUTH_SUCCESS, GET_USER_DETAIL, SET_CHAIN_ID, UPDATE_MINTED_NFT_COUNT, UPDATE_USER_BALANCE, UPDATE_WALLET_STATUS,  SET_AVAX_PRICE, SET_OTHER_USER_DETAIL, SET_WALLET_ADDR, CURRENT_USER } from \"./action.types\"\r\nimport axios from \"axios\";\r\nimport config from \"../../config\";\r\n\r\nexport const authSet = (payload) => dispatch => {\r\n    dispatch({\r\n        type: AUTH_SUCCESS,\r\n        payload: payload\r\n    })\r\n}\r\n\r\nexport const authLogout = () => dispatch => {\r\n    dispatch({\r\n        type: AUTH_LOGOUT,\r\n        payload: {}\r\n    })\r\n}\r\n\r\nexport const setLatestUserInfo = (userId) => dispatch => {\r\n    axios.post(`${config.baseUrl}users/findOne`, { userId }, {\r\n        headers:\r\n        {\r\n            \"x-access-token\": localStorage.getItem(\"jwtToken\")\r\n        }\r\n    }).then((result) => {\r\n        dispatch({\r\n            type: AUTH_SUCCESS,\r\n            payload: result.data.data\r\n        })\r\n    }).catch(() => {\r\n        console.log(\"Get latest userInfo failed.\");\r\n    });\r\n}\r\n\r\nexport const getCurrentUser = () => dispatch => {\r\n    dispatch({\r\n        type: CURRENT_USER,\r\n        payload: {}\r\n    })\r\n}\r\n\r\nexport const getDetailedUserInfo = (userId, isForMine = true) => dispatch => {\r\n    axios.post(`${config.baseUrl}users/findOne`, { userId }, {\r\n        headers:\r\n        {\r\n            \"x-access-token\": localStorage.getItem(\"jwtToken\")\r\n        }\r\n    }).then((result) => {\r\n        if (isForMine) {\r\n            dispatch({\r\n                type: GET_USER_DETAIL,\r\n                payload: result.data.data\r\n            })\r\n        }\r\n        else {\r\n            dispatch({\r\n                type: SET_OTHER_USER_DETAIL,\r\n                payload: result.data.data\r\n            })\r\n        }\r\n    }).catch(() => {\r\n        console.log(\"Get detailed userInfo failed.\");\r\n    });\r\n}\r\n\r\nexport const setConnectedWalletAddress = (address) => dispatch => {\r\n    // console.log(\"[ACTION] address  = \", address);\r\n    dispatch({\r\n        type: SET_WALLET_ADDR,\r\n        payload: address\r\n    })\r\n}\r\n\r\nexport const setConnectedChainId = (chainId) => dispatch => {\r\n    // console.log(\"[ACTION] chainId  = \", chainId);\r\n    dispatch({\r\n        type: SET_CHAIN_ID,\r\n        payload: chainId\r\n    })\r\n}\r\n\r\nexport const updateBalanceOfUser =  (balance) => dispatch =>\r\n{\r\n    //UPDATE_USER_BALANCE\r\n    dispatch({\r\n        type: UPDATE_USER_BALANCE,\r\n        payload: balance\r\n    })\r\n}\r\n\r\nexport const setWalletStatus = (status) => dispatch => \r\n{\r\n    dispatch({\r\n        type: UPDATE_WALLET_STATUS,\r\n        payload: status\r\n    })\r\n}\r\n\r\nexport const setAvaxPrice = (price) => dispatch => {\r\n    dispatch({\r\n        type: SET_AVAX_PRICE,\r\n        payload: { avax: price }\r\n    })\r\n}\r\n\r\nexport const updateMintedNFTCountAfterTrading =  (count) => dispatch =>\r\n{\r\n    //UPDATE_MINTED_NFT_COUNT\r\n    dispatch({\r\n        type: UPDATE_MINTED_NFT_COUNT,\r\n        payload: count\r\n    })\r\n}\r\n\r\n","import isEmpty from \"../../utilities/isEmpty\";\r\nimport { SET_EVO_NFT_LIST, SET_NFT_TRADING_RESULT, SET_STAKED_NFT_LIST, SET_TOTAL_REWARD } from \"./action.types\";\r\n\r\nexport const updateEvoNFTList = (items) => async (dispatch) =>\r\n{\r\n    if(isEmpty(items) === true)\r\n    {        \r\n        dispatch({\r\n            type: SET_EVO_NFT_LIST,\r\n            payload: null\r\n        })\r\n    }else{\r\n        dispatch({\r\n            type: SET_EVO_NFT_LIST,\r\n            payload: items\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateStakedNFTList = (items) => (dispatch) =>\r\n{\r\n    if(isEmpty(items) === true)\r\n    {        \r\n        dispatch({\r\n            type: SET_STAKED_NFT_LIST,\r\n            payload: null\r\n        })\r\n    }else{\r\n        dispatch({\r\n            type: SET_STAKED_NFT_LIST,\r\n            payload: items\r\n        })\r\n    }\r\n}\r\n\r\nexport const setNFTTradingResult  = (functionName, success, message) => dispatch =>\r\n{    \r\n    console.log(\"[SET_NFT_TRADING_RESULT action ] : \", functionName, success, message)\r\n    dispatch({\r\n        type: SET_NFT_TRADING_RESULT,\r\n        payload: {\r\n            function : functionName,\r\n            success : success,\r\n            message : message\r\n        }\r\n    });\r\n}\r\n\r\nexport const emptyNFTTradingResult  = () => dispatch =>\r\n{    \r\n    console.log(\"[SET_NFT_TRADING_RESULT action ] : null\" )\r\n    dispatch({\r\n        type: SET_NFT_TRADING_RESULT,\r\n        payload: null\r\n    });\r\n}\r\n\r\nexport const updateTotalReward  = (totalReward) => dispatch =>\r\n{\r\n    dispatch({\r\n        type: SET_TOTAL_REWARD,\r\n        payload: totalReward\r\n    })\r\n}\r\n","import Web3 from \"web3\";\r\nimport store from '../store';\r\nimport config from \"../config\";\r\nimport create from \"ipfs-http-client\";\r\nimport {setConnectedWalletAddress, setWalletStatus, setConnectedChainId, updateBalanceOfUser, updateMintedNFTCountAfterTrading} from \"../store/actions/auth.actions\"; \r\nimport { setNFTTradingResult, updateStakedNFTList, updateTotalReward, updateEvoNFTList } from \"../store/actions/nft.actions\";\r\nimport isEmpty from \"../utilities/isEmpty\";\r\nimport axios from \"axios\";\r\n\r\nexport const loadWeb3 = async () => \r\n{\r\n  if (window.ethereum) \r\n  {\r\n    window.web3 = new Web3(window.ethereum);\r\n    window.web3.eth.handleRevert = true;\r\n  } \r\n  else if (window.web3) \r\n  {\r\n    window.web3 = new Web3(Web3.givenProvider);\r\n    window.web3.eth.handleRevert = true;\r\n  } \r\n  else {\r\n    // window.alert(\r\n    //   \"Non-Ethereum browser detected. Please connect and unlock your wallet.\"\r\n    // );\r\n    return;\r\n  }\r\n  if (window.ethereum) {\r\n    window.ethereum.on('chainChanged', function (chainId) {\r\n      checkNetworkById(chainId);\r\n\r\n    });\r\n    window.web3.eth.getChainId().then((chainId) => {\r\n      checkNetworkById(chainId);\r\n\r\n    })\r\n    window.ethereum.on('disconnect', function(error  /*:ProviderRpcError*/) {\r\n      //alert(\"disconnected, \" + error);      \r\n      store.dispatch(setConnectedWalletAddress(0))\r\n      store.dispatch(setWalletStatus(false));\r\n    });\r\n    window.ethereum.on('accountsChanged', function(accounts /*: Array<string>*/) {\r\n      //  alert(\"wallet \"+accounts[0]+\" is connected\");\r\n       if(accounts[0]   !== undefined)\r\n       {\r\n        store.dispatch(setConnectedWalletAddress(accounts[0]))\r\n        store.dispatch(setWalletStatus(true));\r\n       }\r\n       if(accounts.length === 0) store.dispatch(setWalletStatus(false));\r\n    });\r\n  }\r\n};\r\n\r\nexport const checkNetwork = async () => {\r\n  if (window.web3) {\r\n    const chainId = await window.web3.eth.getChainId();\r\n    return checkNetworkById(chainId);\r\n  }\r\n}\r\n\r\nexport const checkNetworkById = async (chainId) => {\r\n  if (window.web3.utils.toHex(chainId) !== window.web3.utils.toHex(config.chainId)) \r\n  {\r\n    await changeNetwork();      \r\n  }\r\n  const cid = await window.web3.eth.getChainId();\r\n  store.dispatch(setConnectedChainId(cid));\r\n  return (window.web3.utils.toHex(cid) === window.web3.utils.toHex(config.chainId) )\r\n}\r\n\r\nconst changeNetwork = async () => \r\n{\r\n  try {\r\n      await window.ethereum.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: window.web3.utils.toHex(config.chainId) }],\r\n      });\r\n    } \r\n  catch (switchError) \r\n    {\r\n      // This error code indicates that the chain has not been added to MetaMask.\r\n      if (switchError.code === 4902) \r\n      {\r\n        try {\r\n          await window.ethereum.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [\r\n              {\r\n                chainId: window.web3.utils.toHex(config.chainId),\r\n                chainName: 'Cronos',\r\n                rpcUrls: [config.testNetUrl] /* ... */,\r\n              },\r\n            ],\r\n          });\r\n          return {\r\n            success : true,\r\n            message : \"switching succeed\"\r\n          }\r\n        } catch (addError) {          \r\n          return {\r\n            success : false,\r\n            message : \"Switching failed.\" + addError.message\r\n          }\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\nexport const connectWallet = async () => \r\n{\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      const obj = {\r\n        success: true,\r\n        message: \"Metamask successfuly connected.\",\r\n        address: addressArray[0],\r\n      };\r\n      checkNetwork();\r\n      store.dispatch(setWalletStatus(true));\r\n      return obj;\r\n    } catch (err) {\r\n      store.dispatch(setWalletStatus(false));\r\n      return {\r\n        success: false,\r\n        address: \"\",\r\n        message: err.message,\r\n      };\r\n    }\r\n  }\r\n  else {\r\n    store.dispatch(setWalletStatus(false));\r\n    return {\r\n      success: false,\r\n      address: \"\",\r\n      message: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual BSC wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getValidWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      if (addressArray.length > 0) {\r\n        store.dispatch(setWalletStatus(true));\r\n        return {\r\n          success: true,\r\n          address: addressArray[0],\r\n          status: \"Fill in the text-field above.\",\r\n        };\r\n      } else {\r\n        store.dispatch(setWalletStatus(false));\r\n        return {\r\n          success: false,\r\n          address: \"\",\r\n          status: \"🦊 Please connect to Metamask.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      store.dispatch(setWalletStatus(false));\r\n      return {\r\n        success: false,\r\n        address: \"\",\r\n        status: err.message,\r\n      };\r\n    }\r\n  } else {\r\n    store.dispatch(setWalletStatus(false));\r\n    return {\r\n      success: false,\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" rel=\"noreferrer\" href={`https://metamask.io/download.html`}>\r\n              You must install Metamask, a virtual BSC wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getBalanceOfAccount = async (address) => \r\n{\r\n  try {\r\n    //let accounts = await web3.eth.getAccounts();\r\n\r\n    let accountBalance = await window.web3.eth.getBalance(address);\r\n\r\n    accountBalance = window.web3.utils.fromWei(accountBalance);\r\n\r\n    store.dispatch(updateBalanceOfUser(accountBalance));\r\n\r\n    return {\r\n      success: true,\r\n      account: address,\r\n      balance: accountBalance\r\n    }\r\n  } catch (error) {\r\n    \r\n    store.dispatch(updateBalanceOfUser(0));\r\n\r\n    return {\r\n      success: false,\r\n      balance: 0,\r\n      result: \"Something went wrong: \" + parseErrorMsg(error.message)\r\n    }\r\n  }\r\n}\r\n\r\nexport const compareWalllet = (first, second) => \r\n{\r\n  if (!first || !second) {\r\n    return false;\r\n  }\r\n  if (first.toUpperCase() === second.toUpperCase()) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nconst updateUserBalanceAfterTrading = async (currentAddr) =>\r\n{\r\n  let balanceOfUser = await window.web3.eth.getBalance(currentAddr);\r\n  balanceOfUser = window.web3.utils.fromWei(balanceOfUser);\r\n  store.dispatch(updateBalanceOfUser(balanceOfUser));\r\n}\r\n\r\nconst parseErrorMsg = (errMsg) =>\r\n{  \r\n  var returStr  = \"\";\r\n  let startPos = JSON.stringify(errMsg).search(\"message\");\r\n  if(startPos >= 0)\r\n  {\r\n    let subStr = errMsg.substring(startPos+4, errMsg.length)\r\n    let endPos = subStr.indexOf(\"\\\"\");\r\n    if(endPos >= 0)\r\n    {\r\n      subStr = subStr.substring(0, endPos);\r\n      returStr = subStr;\r\n    }\r\n  }else returStr = errMsg;\r\n  return returStr;\r\n}\r\n\r\nexport const createNftFile = async (file, title, description) => {\r\n    const client = create('https://ipfs.infura.io:5001/api/v0')\r\n    try {\r\n      const image_hash = await client.add(file);\r\n      const metadata = JSON.stringify({\r\n        name: title,\r\n        description: description,\r\n        image: config.ipfsUrl + image_hash.cid.toString()\r\n      });\r\n      const meta_hash = await client.add(metadata);\r\n      const token_uri = config.ipfsUrl + meta_hash.cid.toString();\r\n      return {\r\n        success: true,\r\n        image_uri: config.ipfsUrl + image_hash.cid.toString(),\r\n        token_uri: token_uri\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: 'Error uploading file: ' + error\r\n      }\r\n    }\r\n  };\r\n\r\n  export const mintMultipleNFT = async (currentAddr, count, fee) => \r\n  {\r\n    /*\r\n     Multiple mint :  mintMultipleNFT(string[] memory tokenUris)\r\n    */\r\n\r\n    try \r\n    {\r\n      let EvoManagerContract = await new window.web3.eth.Contract(config.EvoManagerContractAbi, config.EvoManagerContractAddress);\r\n      let minting_fee = window.web3.utils.toWei(fee !== null ? fee.toString() : '0', 'ether');\r\n      \r\n      var mintMultipleNFT = EvoManagerContract.methods.mintMultipleNFT(count);\r\n      let gasFee = await mintMultipleNFT.estimateGas({ from: currentAddr, value: minting_fee });\r\n      var balanceOfUser = await window.web3.eth.getBalance(currentAddr);\r\n      var gasPrice = 30 * (10 ** 9);\r\n  \r\n      if (balanceOfUser <= gasFee * gasPrice) {\r\n        store.dispatch(setNFTTradingResult(\"mintMultipleNFT\", false, \"Insufficient balance.\" ));\r\n      \r\n        return {\r\n          success : false,\r\n          message : \"Insufficient balance.\"\r\n        }\r\n      }\r\n      await mintMultipleNFT.send({ from: currentAddr, value: minting_fee });\r\n  \r\n      store.dispatch(setNFTTradingResult(\"mintMultipleNFT\", true, \"Succeed in multiple minting.\"));\r\n  \r\n      updateUserBalanceAfterTrading(currentAddr);\r\n  \r\n      return {\r\n        success : true,\r\n        message : \"Succeed in multiple minting.\"\r\n      }\r\n    } catch (error) {\r\n      store.dispatch(setNFTTradingResult(\"mintMultipleNFT\", false, parseErrorMsg(error.message) ));\r\n  \r\n      return {\r\n        success : false,\r\n        message : parseErrorMsg(error.message)\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const stake = async (currentAddr, tokenUris) => \r\n  {\r\n    /*\r\n     Multiple mint :  mintMultipleNFT(string[] memory tokenUris)\r\n    */\r\n      \r\n    try \r\n    {\r\n      let EvoManagerContract = await new window.web3.eth.Contract(config.EvoManagerContractAbi, config.EvoManagerContractAddress);\r\n      let EvoNFTContract = await new window.web3.eth.Contract(config.EvoNFTContractAbi, config.EvoNFTContractAddress);\r\n      //stake only one NFT, if 2 or more NFTs we have to iterate exch one to approve\r\n      await EvoNFTContract.methods.approve(config.EvoManagerContractAddress, window.web3.utils.toBN(Number(tokenUris)) ).send({ from: currentAddr });\r\n\r\n      var staking = EvoManagerContract.methods.stake( [ window.web3.utils.toBN(Number(tokenUris)) ]);\r\n      let gasFee = await staking.estimateGas({ from: currentAddr });\r\n      var balanceOfUser = await window.web3.eth.getBalance(currentAddr);\r\n      var gasPrice = 30 * (10 ** 9);\r\n  \r\n      if (balanceOfUser <= gasFee * gasPrice) {\r\n        store.dispatch(setNFTTradingResult(\"stake\", false, \"Insufficient balance.\" ));\r\n      \r\n        return {\r\n          success : false,\r\n          message : \"Insufficient balance.\"\r\n        }\r\n      }\r\n     \r\n      await staking.send({ from: currentAddr });\r\n\r\n      store.dispatch(setNFTTradingResult(\"stake\", true, \"Succeed in staking item(s).\"));\r\n  \r\n      updateUserBalanceAfterTrading(currentAddr);\r\n  \r\n      return {\r\n        success : true,\r\n        message : \"Succeed in staking item(s).\"\r\n      }\r\n    } catch (error) {\r\n      store.dispatch(setNFTTradingResult(\"stake\", false, parseErrorMsg(error.message) ));\r\n  \r\n      return {\r\n        success : false,\r\n        message : parseErrorMsg(error.message)\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const getStakingInfoOfUser = async (currentAddr) =>\r\n  {\r\n    /*\r\n      function getStakingInfoOfUser(address _user)\r\n    */    \r\n    try \r\n    {    \r\n      let evoManagerContract = await new window.web3.eth.Contract(config.EvoManagerContractAbi, config.EvoManagerContractAddress);\r\n      let queryRet = await evoManagerContract.methods.getStakingInfoOfUser(currentAddr).call();\r\n\r\n      let evoNftIds = [ ...queryRet[0] ];       \r\n      let evoRewardsOfNfts = [ ...queryRet[1] ];\r\n      let evoNftUris = [ ...queryRet[2] ];\r\n      var list = []; var totalReward = 0;\r\n      if(isEmpty(evoNftIds) === false)\r\n      {\r\n        let k = 0; let tempReward; let metadata;\r\n        for(k = 0 ; k < evoNftIds.length; k++)\r\n        {                \r\n          tempReward = window.web3.utils.fromWei(evoRewardsOfNfts[k] !== null ? evoRewardsOfNfts[k].toString() : '0', 'ether');\r\n          metadata = await axios.get(evoNftUris[k]);\r\n          totalReward += Number(tempReward);\r\n          list.push({token_id:evoNftIds[k], reward:tempReward, token_uri: evoNftUris[k], metadata:metadata.data });      \r\n        };\r\n        \r\n        if(list.length > 0)\r\n        {\r\n          store.dispatch(updateStakedNFTList(list));\r\n          store.dispatch(updateTotalReward(totalReward));\r\n        }else{          \r\n          store.dispatch(updateStakedNFTList());\r\n          store.dispatch(updateTotalReward(0));\r\n        }\r\n      }else{          \r\n        store.dispatch(updateStakedNFTList());\r\n        store.dispatch(updateTotalReward(0));\r\n      }\r\n\r\n    } catch (error) {    \r\n      console.log( \"Something went wrong 18: \" + parseErrorMsg(error.message) )\r\n      store.dispatch(updateStakedNFTList());\r\n      store.dispatch(updateTotalReward(0));\r\n    }\r\n  }\r\n\r\n  export const getUsersEvoNFTs = async (account) =>\r\n  {    \r\n    try{\r\n      const res = await axios.get(\"https://deep-index.moralis.io/api/v2/\" + account + \"/nft/\" + config.EvoNFTContractAddress + \"?chain=bsc%20testnet&format=decimal\", {\r\n        headers: { \"X-API-Key\": config.MoralisAPIKey },\r\n      });\r\n      console.log(res.data.result);\r\n      const nftlist = res.data.result;\r\n      if(nftlist && nftlist.length>0)\r\n      {\r\n          let nftItems = []; let tokenIds = [];\r\n          nftlist.forEach(async (item) => {\r\n            if(item.token_address.toLowerCase() === config.EvoNFTContractAddress.toLowerCase() ) \r\n            {            \r\n              tokenIds.push(item.token_id);\r\n            }\r\n          });\r\n            //get token uris from token IDs\r\n            let evoManagerContract = await new window.web3.eth.Contract(config.EvoManagerContractAbi, config.EvoManagerContractAddress);\r\n            let queryRet = await evoManagerContract.methods.getTokenURIsFromIds(tokenIds).call();\r\n           \r\n            let evoNftUris = queryRet;\r\n            console.log(\"[header useEffect] 11\")\r\n            let k; let metadata;\r\n            for(k = 0 ; k < tokenIds.length; k++)\r\n            {                \r\n              metadata = await axios.get(evoNftUris[k]);\r\n              nftItems.push({token_id:tokenIds[k], token_uri: evoNftUris[k], metadata:metadata.data });      \r\n            };\r\n            console.log(\"nftItems = \", nftItems)\r\n          store.dispatch(updateEvoNFTList(nftItems));\r\n      }else{\r\n        store.dispatch(updateEvoNFTList());\r\n      }\r\n    }catch(error){\r\n      store.dispatch(updateEvoNFTList());      \r\n    }\r\n  }\r\n    \r\n  export const unstake = async (currentAddr, tokenUris) => \r\n  {      \r\n    try \r\n    {\r\n      let EvoManagerContract = await new window.web3.eth.Contract(config.EvoManagerContractAbi, config.EvoManagerContractAddress);\r\n\r\n      var unstake = EvoManagerContract.methods.unstake( [ window.web3.utils.toBN(Number(tokenUris)) ]);\r\n      let gasFee = await unstake.estimateGas({ from: currentAddr });\r\n      var balanceOfUser = await window.web3.eth.getBalance(currentAddr);\r\n      var gasPrice = 30 * (10 ** 9);\r\n  \r\n      if (balanceOfUser <= gasFee * gasPrice) {\r\n        store.dispatch(setNFTTradingResult(\"unstake\", false, \"Insufficient balance.\" ));\r\n      \r\n        return {\r\n          success : false,\r\n          message : \"Insufficient balance.\"\r\n        }\r\n      }\r\n     \r\n      await unstake.send({ from: currentAddr });\r\n\r\n      store.dispatch(setNFTTradingResult(\"unstake\", true, \"Succeed in unstaking item(s).\"));\r\n  \r\n      updateUserBalanceAfterTrading(currentAddr);\r\n  \r\n      return {\r\n        success : true,\r\n        message : \"Succeed in unstaking item(s).\"\r\n      }\r\n    } catch (error) {\r\n      store.dispatch(setNFTTradingResult(\"unstake\", false, parseErrorMsg(error.message) ));\r\n  \r\n      return {\r\n        success : false,\r\n        message : parseErrorMsg(error.message)\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const claim = async (currentAddr) => \r\n  {\r\n    /*\r\n      claim()\r\n    */\r\n      \r\n    try \r\n    {\r\n      let EvoManagerContract = await new window.web3.eth.Contract(config.EvoManagerContractAbi, config.EvoManagerContractAddress);\r\n\r\n      var claim = EvoManagerContract.methods.claim();\r\n      let gasFee = await claim.estimateGas({ from: currentAddr });\r\n      var balanceOfUser = await window.web3.eth.getBalance(currentAddr);\r\n      var gasPrice = 30 * (10 ** 9);\r\n  \r\n      if (balanceOfUser <= gasFee * gasPrice) {\r\n        store.dispatch(setNFTTradingResult(\"claim\", false, \"Insufficient balance.\" ));\r\n      \r\n        return {\r\n          success : false,\r\n          message : \"Insufficient balance.\"\r\n        }\r\n      }\r\n     \r\n      await claim.send({ from: currentAddr });\r\n\r\n      store.dispatch(setNFTTradingResult(\"claim\", true, \"Succeed in claiming.\"));\r\n  \r\n      updateUserBalanceAfterTrading(currentAddr);\r\n  \r\n      return {\r\n        success : true,\r\n        message : \"Succeed in claiming.\"\r\n      }\r\n    } catch (error) {\r\n      store.dispatch(setNFTTradingResult(\"claim\", false, parseErrorMsg(error.message) ));\r\n  \r\n      return {\r\n        success : false,\r\n        message : parseErrorMsg(error.message)\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const getMintedNFTCount = async () => \r\n  {\r\n    /*\r\n      claim()\r\n    */\r\n      \r\n    try \r\n    {\r\n      let EvoManagerContract = await new window.web3.eth.Contract(config.EvoManagerContractAbi, config.EvoManagerContractAddress);\r\n\r\n      var count = 0;\r\n       \r\n      count = await EvoManagerContract.methods.getMintedNFTCount().call();\r\n\r\n      store.dispatch(updateMintedNFTCountAfterTrading(count));\r\n  \r\n    } catch (error) {\r\n      store.dispatch(updateMintedNFTCountAfterTrading(0));\r\n  \r\n    }\r\n  }\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport isEmpty from \"../utilities/isEmpty\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Button } from \"@mui/material\";\r\nimport { connectWallet, getMintedNFTCount, getUsersEvoNFTs } from '../interactWithSmartContract';\r\nimport { setConnectedWalletAddress } from '../store/actions/auth.actions';\r\n\r\nconst connectTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#ffbd59\",\r\n      },\r\n    },\r\n  });\r\n\r\nconst Header= function() {\r\n  \r\n  const [compressedAddress, setCompressedAddress] = useState(\"\");\r\n\r\n  const account = useSelector(state => state.auth.currentWallet);\r\n  const walletStatus = useSelector(state => state.auth.walletStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  const ConnectWallet = async () => {\r\n    let connection = await connectWallet();\r\n    if(connection.success === true) dispatch(setConnectedWalletAddress(connection.address));\r\n  }\r\n\r\n  const DisconnectWallet = () =>\r\n  {\r\n\r\n  }\r\n  \r\n  useEffect(() => \r\n  {\r\n    if(isEmpty(account)) return;\r\n    let compAddress = \"\";\r\n    compAddress = account.substring(0, 6)+\"...\"+account.substring(account.length-4, account.length);\r\n    setCompressedAddress(compAddress);  \r\n    getUsersEvoNFTs(account);\r\n    getMintedNFTCount();\r\n    \r\n  }, [account, dispatch])\r\n\r\n  return (\r\n     <div className='header padder-50' style={{ justifyContent: \"flex-end\" }}>\r\n        <ThemeProvider theme={connectTheme}>\r\n          {walletStatus === false && <Button variant=\"contained\" color=\"primary\" className=\"btn_connect\" onClick={() => ConnectWallet() }>Connect Wallet</Button>}\r\n          {walletStatus === true &&  <Button variant=\"contained\" color=\"primary\" className=\"btn_connect\" onClick={() => DisconnectWallet() }>{compressedAddress}</Button>}\r\n        </ThemeProvider>      \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","\r\nimport {  useState, useEffect } from 'react';\r\nimport Slider from '@mui/material/Slider';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport Button from '@mui/material/Button';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate} from \"@reach/router\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getMintedNFTCount, getUsersEvoNFTs, mintMultipleNFT } from '../interactWithSmartContract';\r\nimport isEmpty from '../utilities/isEmpty';\r\nimport { emptyNFTTradingResult } from '../store/actions/nft.actions';\r\nimport config from '../config';\r\n\r\nconst mintTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ff9a3d\"\r\n    }\r\n  }\r\n})\r\n\r\nconst loadmapTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ff9a3d\"\r\n    }\r\n  }\r\n})\r\n\r\nconst PrettoSlider = styled(Slider)({\r\n  color: '#ff9a3d',\r\n  height: 4,\r\n  '& .MuiSlider-track': {\r\n    border: 'none',\r\n  },\r\n  '& .MuiSlider-thumb': {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#ff9a3d',\r\n    border: '2px solid #df7a1d',\r\n    borderRadius: \"0\",\r\n    transform: \"translate(-50%, -50%) rotate(45deg)\",\r\n    '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\r\n      boxShadow: 'inherit',\r\n    },\r\n    '&:before': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  '& .MuiSlider-valueLabel': {\r\n    lineHeight: 1.2,\r\n    fontSize: 12,\r\n    background: 'unset',\r\n    padding: 0,\r\n    width: 32,\r\n    height: 32,\r\n    borderRadius: '50% 50% 50% 0',\r\n    backgroundColor: '#ff9a3d',\r\n    transformOrigin: 'bottom left',\r\n    '&:before': { display: 'none' },\r\n    '&.MuiSlider-valueLabelOpen': {\r\n      transform: 'translate(0%, -90%) rotate(270deg) scale(1)',\r\n    },\r\n    '& > *': {\r\n      transform: 'rotate(45deg)',\r\n    },\r\n  },\r\n});\r\n \r\nfunction Home() {\r\n\r\n  const [count, setCount] = useState(5);\r\n  const [mintedCount, setMitedCount] = useState(0);\r\n\r\n  const account = useSelector( state => state.auth.currentWallet );\r\n  const nftOperationResult = useSelector( state => state.nft.tradingResult );\r\n  const walletStatus = useSelector(state => state.auth.walletStatus);\r\n  const mintedNFTCount = useSelector(state => state.auth.mintedNFTCount);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setCount(newValue);\r\n  };\r\n\r\n  useEffect( () => {\r\n    if(!isEmpty(nftOperationResult))\r\n    {\r\n      switch(nftOperationResult.function)\r\n      {\r\n        default:\r\n          break;\r\n        case \"mintMultipleNFT\":\r\n          if(nftOperationResult.success === true) \r\n          {            \r\n            NotificationManager.success(nftOperationResult.message, \"Success\", 2000);\r\n          }\r\n          if(nftOperationResult.success === false) NotificationManager.error(nftOperationResult.message, \"Error\", 2000);\r\n          dispatch(emptyNFTTradingResult());\r\n          getMintedNFTCount();\r\n          setTimeout(() => \r\n          {           \r\n            getUsersEvoNFTs(account);\r\n          }, 3000)\r\n          break;\r\n      }\r\n    }\r\n  }, [nftOperationResult, account, dispatch])\r\n  \r\n  useEffect(() =>\r\n  {    \r\n    getMintedNFTCount();\r\n  }, [])\r\n  \r\n  useEffect(() =>\r\n  {\r\n    setMitedCount(mintedNFTCount)\r\n  }, [mintedNFTCount]);\r\n\r\n  const onClickMint = () => {    \r\n    getMintedNFTCount();\r\n    setTimeout(async () => {\r\n      if( !isEmpty(account) && walletStatus === true) \r\n      {\r\n        let counts2mint = 0;\r\n        if(mintMultipleNFT >= config.NFT_MAX_MINT)\r\n        {\r\n          NotificationManager.warning(\"You've failed. All ever bullz were minted.\", \"Information\",  2000)\r\n          return;\r\n        }\r\n        if(count + Number(mintedNFTCount) > config.NFT_MAX_MINT)\r\n        {\r\n          counts2mint = count + Number(mintedNFTCount) - config.NFT_MAX_MINT;\r\n        }\r\n        else{\r\n          counts2mint = count;\r\n        }\r\n        await mintMultipleNFT(account, counts2mint, config.MINTING_FEE_PER_NFT * counts2mint);\r\n      }\r\n      else NotificationManager.warning(\"Please connect your wallet.\", \"Warning\",  2000)\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div id='section_mint'>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <div className='mint-title' >\r\n            Evo Bullz\r\n          </div>\r\n          <div className='mint-subtitle'>\r\n            333 Bullz on the Cronos Chain\r\n          </div>\r\n        </div>\r\n        <div className=\"minting_panel_out_borderdiv\"\r\n          style={{\r\n            width: \"85%\",\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            background: \"#ff9a3d\",\r\n            padding: \"25px\",\r\n            position: \"relative\"\r\n          }}>\r\n          <div className=\"pannel-pattern left-top\"></div>\r\n          <div className=\"pannel-pattern right-top\"></div>\r\n          <div className=\"pannel-pattern left-bottom\"></div>\r\n          <div className=\"pannel-pattern right-bottom\"></div>\r\n          <div className='mint_pannel'\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\"\r\n            }}>\r\n            <div className=\"NFT_image_preview\" style={{ justifyContent: \"flex-end\" }} >\r\n              <img src=\"/img/Asset 1.png\" alt=\"/\" width=\"100%\" height=\"100%\" ></img>\r\n            </div>\r\n            <div className=\"control_mint_panel\" style={{ justifyContent: \"flex-start\" }}>\r\n              <div className='c-w fs-60 h-60 flex align-center justify-center noto-bold font-bold'>\r\n                {mintedCount}°  /  {config.NFT_MAX_MINT}\r\n              </div>\r\n              <div className='c-w h-50 fs-20 flex align-center noto-bold font-bold'>\r\n                minted\r\n              </div>\r\n              <div className='c-w h-70 fs-32 flex align-center noto-bold font-bold'>\r\n                Price: {Number(count * config.MINTING_FEE_PER_NFT).toFixed(2)} CRO\r\n              </div>\r\n              <div className='flex flex-col align-center justify-center h-100' >\r\n                <PrettoSlider\r\n                  valueLabelDisplay=\"auto\"\r\n                  aria-label=\"pretto slider\"\r\n                  defaultValue={3}\r\n                  min={1}\r\n                  max={10}\r\n                  value={count}\r\n                  onChange={handleChange}\r\n                />\r\n                <div className='flex w-full justify-between'>\r\n                  <span className='c-w fs-20 noto-bold font-extraBold'>1</span>\r\n                  <span className='c-w fs-15 flex1'></span>\r\n                  <span className='c-w fs-20 noto-bold font-extraBold'>10</span>\r\n                </div>\r\n              </div>\r\n              <div className='flex justify-center'>\r\n                <ThemeProvider theme={mintTheme}>\r\n                  <Button className='btn_mint font-bold' style={{ color: \"white\" }} variant='contained' onClick={() => onClickMint()} >MINT</Button>\r\n                </ThemeProvider>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id='section_clanz' >\r\n\r\n        <div className='title fs-40 c-w noto-bold font-extraBold'>\r\n          Evo Bullz NFT\r\n        </div>\r\n        <div className='clanz_content content-max'>\r\n          <div className='left flex flex-col flex1'>\r\n            <p className='fs-20 c-w'>\r\n              Evo Bullz is a project that firmly believes in the Cronos\r\n              Chain. We want to built an exclusive community around this\r\n              project.\r\n              Our goal is to grow together, bringing value to the\r\n              ecosystem and its owners.\r\n              We are open to collaboration and we want to include the\r\n              owners in the growth and management of the project.\r\n              In our plans there are staking, governance tokens and DAO,\r\n              read more in the roadmaps.\r\n            </p>\r\n            <div className='clanz_buttons'>\r\n              <ThemeProvider theme={loadmapTheme}>\r\n                <Button variant=\"contained\" color=\"primary\" className='btn_roadmap'>\r\n                  <a href='#section_roadmap' style={{ width: \"100%\", height: \"100%\", color: \"white\", textDecoration: \"none\" }}>\r\n                    See Roadmaps\r\n                  </a>\r\n                </Button>\r\n              </ThemeProvider>\r\n              <div style={{ width: \"80px\" }}></div>\r\n              <ThemeProvider theme={loadmapTheme}>\r\n                <Button variant=\"contained\" color=\"primary\" className='btn_collection' onClick={() => {navigate(\"/staking\")}}>View Collection</Button>\r\n              </ThemeProvider>\r\n            </div>\r\n          </div>\r\n          <div className='right'>\r\n            <div className=\"right_image\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ background: \"white\", height: \"2px\", marginTop: \"100px\", marginBottom: \"100px\" }}></div>\r\n      </div>\r\n\r\n      <div id=\"section_tokenomics_mobile\" style={{display : \"none\"}}>\r\n        <div className='airdroprate_explain' >\r\n          <div className='fs-20 c-w'>\r\n            The part destined for the team will be used for development and marketing.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"section_tokenomics_00\">\r\n        <div id=\"team_rate\" className='title fs-40 c-w noto-bold font-extraBold'>\r\n          Team<br></br>&nbsp;&nbsp;50%\r\n        </div>\r\n        <div className='half_image_area' >\r\n        </div>\r\n        <div id=\"airdrop_rate\" className='title fs-40 c-w noto-bold font-extraBold'>\r\n          Airdrop<br></br>&nbsp;&nbsp;&nbsp;&nbsp;50%\r\n        </div>\r\n      </div>\r\n      <div id=\"section_tokenomics_11\" >\r\n        <div className='teamrate_explain' >\r\n          <div className='fs-20 c-w'>\r\n            The part destined for the team will be used for development and marketing.\r\n          </div>\r\n        </div>\r\n        <div className='airdroprate_explain' >\r\n          <div className='fs-20 c-w'>\r\n            A big part of the minting proceeds will be <strong>airdropped\r\n              to the holder</strong> who have not listed their Bullz in the first\r\n            month. This as a reward for believing in us, only Gen 0\r\n            will have such a great return for its owners.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"section_tokenomics_22\" >\r\n        <div className='staking_explain' style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div className='stakingpercent_image_area'>\r\n          </div>\r\n            <div className=\" fs-30 c-w noto-bold font-extraBold\" style={{ textAlign: \"center\"}} >Staking</div>\r\n            <div className='fs-20 c-w'>\r\n              Staking will return the 80% of the royalties to the stakers, every week, and further on, in our own token.\r\n            </div>\r\n        </div>\r\n          <div className='middle_empty_area'></div>\r\n        <div className='growth_explain' style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div className='growthchat_image_area' >\r\n          </div>\r\n            <div className=\" fs-30 c-w noto-bold font-extraBold\" style={{ textAlign: \"center\" }} >Growth</div>\r\n            <div className='fs-20 c-w'>\r\n              There will be an increase in the value of these NFTs with the increase of the volumes traded on the Cronos Chain.\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div id='section_roadmap'>\r\n        <div style={{ background: \"white\", height: \"2px\", marginTop: \"100px\", marginBottom: \"10px\" }}></div>\r\n        <div className='title flex align-center justify-center c-black noto-bold font-extraBold'>\r\n          Roadmap\r\n        </div>\r\n        <div className='content m-t-50 content-max'>\r\n          <div className='roadmaprow' >\r\n            <div className='yellowpanel '>\r\n            </div>\r\n          </div>\r\n          <div className='roadmaprow1'\r\n          >\r\n            <div className='yellowpanel'>\r\n            </div>\r\n          </div>\r\n          <div className='roadmaprow' >\r\n            <div className='yellowpanel '>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"section_footer\">\r\n        <div style={{ background: \"white\", height: \"2px\" }}></div>\r\n        <div className='contract flex flex-col justify-around align-center'>\r\n          <div className='c-w fs-50 noto-bold font-extraBold'>\r\n            Contract Address\r\n          </div>\r\n          <div className='c-w fs-30'>\r\n            0x000000000000000000000000000000000000\r\n          </div>\r\n        </div>\r\n        <div style={{ background: \"white\", height: \"2px\" }}></div>\r\n        <div className='h-220 link flex flex-col align-center justify-center'>\r\n          <div>\r\n            <img className='m-r-40' src='/img/twitter.png' alt=\"twitter\" ></img>\r\n            <img src='/img/discord.png' alt=\"discord\" ></img>\r\n          </div>\r\n          <div className='c-w fs-24 flex align-center text-center m-t-20'>\r\n            Evo Bullz<br />© 2022\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { navigate } from '@reach/router';\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport isEmpty from '../utilities/isEmpty';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { emptyNFTTradingResult } from '../store/actions/nft.actions';\r\nimport { getStakingInfoOfUser, getUsersEvoNFTs, stake, unstake, claim } from '../interactWithSmartContract';\r\n\r\nconst connectTheme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#ffbd59\",\r\n      },\r\n    },\r\n  });\r\n\r\nvar  updateListTimer;\r\n\r\nconst Staking = () =>\r\n{    \r\n    const dispatch = useDispatch();\r\n    const evoItems  = useSelector(state => state.nft.evoList);\r\n    const account = useSelector(state => state.auth.currentWallet);\r\n    const walletStatus = useSelector(state => state.auth.walletStatus);\r\n    const nftOperationResult = useSelector( state => state.nft.tradingResult );\r\n    const stakedItems = useSelector(state => state.nft.stakedList);\r\n    const totalReward = useSelector(state => state.nft.totalReward);\r\n        \r\n    useEffect(() =>{\r\n        \r\n        if(updateListTimer !== null) clearInterval(updateListTimer);\r\n        updateListTimer = setInterval(() =>\r\n        {               \r\n            if(!isEmpty(account)) \r\n            {\r\n                getStakingInfoOfUser(account)\r\n                getUsersEvoNFTs(account);\r\n            }\r\n        }, 3000)\r\n\r\n    }, [evoItems, account ])\r\n\r\n    useEffect(() => {\r\n        if(!isEmpty(nftOperationResult))\r\n        {\r\n          switch(nftOperationResult.function)\r\n          {\r\n            default:\r\n              break;\r\n            case \"stake\":\r\n            case \"unstake\":\r\n              if(nftOperationResult.success === true) \r\n              {            \r\n                NotificationManager.success(nftOperationResult.message, \"Success\", 2000); \r\n              }\r\n              if(nftOperationResult.success === false) NotificationManager.error(nftOperationResult.message, \"Error\", 2000);\r\n              dispatch(emptyNFTTradingResult());   \r\n              setTimeout(() => \r\n              {           \r\n                getUsersEvoNFTs(account);\r\n              }, 3000)\r\n              break;\r\n            case \"claim\":\r\n                if(nftOperationResult.success === true) \r\n                {            \r\n                  NotificationManager.success(nftOperationResult.message, \"Success\", 2000); \r\n                }\r\n                if(nftOperationResult.success === false) NotificationManager.error(nftOperationResult.message, \"Error\", 2000);\r\n                dispatch(emptyNFTTradingResult());   \r\n                break;\r\n          }\r\n        }\r\n      }, [nftOperationResult, account, dispatch])\r\n\r\n    const onClickStake = async (tokenId) =>\r\n    {\r\n        if(!isEmpty(account) && walletStatus === true) await stake(account, [ tokenId ]);\r\n        else NotificationManager.warning(\"Please connect your wallet.\", \"Warning\",  2000)        \r\n    }\r\n\r\n    const onClickUnstake = async (tokenId) =>\r\n    {\r\n        if(!isEmpty(account) && walletStatus === true) await unstake(account, [ tokenId ]);\r\n        else NotificationManager.warning(\"Please connect your wallet.\", \"Warning\",  2000)          \r\n    }\r\n\r\n    const onClickClaim  = async () =>\r\n    {\r\n        if(!isEmpty(account) && walletStatus === true) await claim(account);\r\n        else NotificationManager.warning(\"Please connect your wallet.\", \"Warning\",  2000)          \r\n    }\r\n\r\n    return(\r\n        <div className='container'>\r\n            {\r\n                isEmpty(evoItems) === false && evoItems.length > 0 &&\r\n                <>\r\n                <div \r\n                    style={{\r\n                        marginTop: \"100px\",\r\n                        marginBottom: \"100px\",\r\n                        textAlign: \"center\",\r\n                        color: \"white\",\r\n                        fontWeight: \"900\",\r\n                        fontSize: \"40px\",\r\n                        fontFamily: \"Opensans-ExtraBold\"\r\n                    }}\r\n                >\r\n                    Stake your Evo Bullz\r\n                </div>\r\n                <div \r\n                    style={{\r\n                        marginLeft: \"120px\",\r\n                        justifyContent:\"flex-start\"\r\n                    }}\r\n                >\r\n                    <ThemeProvider theme={connectTheme}>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"btn_back2home\" onClick={() => navigate(\"/\") }>back to home</Button>\r\n                    </ThemeProvider>\r\n                </div>\r\n                <div \r\n                    style={{ \r\n                        display:\"flex\", \r\n                        flexWrap: \"wrap\",\r\n                        marginLeft: \"100px\",\r\n                        marginRight: \"100px\"\r\n                    }}\r\n                >\r\n                    {\r\n                        evoItems.map((item, index) => (\r\n                            <div key={index} \r\n                                style={{ \r\n                                    margin: \"20px\", \r\n                                    width:\"20%\",\r\n                                    border: \"solid #fff 1px\",\r\n                                    paddingBottom: '10px'\r\n                                }}\r\n                            >   \r\n                                <div \r\n                                    style={{ \r\n                                        width:\"100%\", \r\n                                        color:\"white\",                                        \r\n                                        fontWeight: \"450\",\r\n                                        fontSize: \"20px\",\r\n                                        textAlign: \"center\",\r\n                                        padding: \"10px\"\r\n                                    }}\r\n                                >\r\n                                    {item.metadata && item.metadata.name}\r\n                                </div>\r\n                                <img src={item.metadata && item.metadata.image && item.metadata.image} alt=\"Evo NFT\" \r\n                                    style={{ width: \"100%\"}}    \r\n                                >                                \r\n                                </img>\r\n                                <div style={{ display:\"flex\", justifyContent:\"space-around\" }}>\r\n                                    <div \r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\"\r\n                                        }}\r\n                                    >\r\n                                        <ThemeProvider theme={connectTheme}>\r\n                                            <Button variant=\"contained\" color=\"primary\" className=\"btn_stake\" onClick={() => {onClickStake(item.token_id)} }>Stake</Button>\r\n                                        </ThemeProvider>                                    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                </>\r\n            }\r\n            {\r\n                isEmpty(stakedItems) === false && stakedItems.length > 0 &&\r\n                <>                \r\n                <div \r\n                    style={{\r\n                        marginTop: \"100px\",\r\n                        marginBottom: \"100px\",\r\n                        textAlign: \"center\",\r\n                        color: \"white\",\r\n                        fontWeight: \"900\",\r\n                        fontSize: \"40px\",\r\n                        fontFamily: \"Opensans-ExtraBold\"\r\n                    }}\r\n                >\r\n                    Claim your reward\r\n                </div>\r\n                <div \r\n                    style={{\r\n                        marginLeft: \"120px\",\r\n                        justifyContent:\"flex-start\"\r\n                    }}\r\n                >\r\n                    <ThemeProvider theme={connectTheme}>\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"btn_back2home\" onClick={() => {onClickClaim()} }> Claim </Button>\r\n                    </ThemeProvider>\r\n                    <span style={{ color: \"white\" }}>     Total : {totalReward} EVO</span>\r\n                </div>\r\n                <div \r\n                    style={{ \r\n                        display:\"flex\", \r\n                        flexWrap: \"wrap\",\r\n                        marginLeft: \"100px\",\r\n                        marginRight: \"100px\"\r\n                    }}\r\n                >\r\n                    {\r\n                        stakedItems.map((item, index) => (\r\n                            <div key={index} \r\n                                style={{ \r\n                                    margin: \"20px\", \r\n                                    width:\"20%\",\r\n                                    border: \"solid #fff 1px\",\r\n                                    paddingBottom: '10px'\r\n                                }}\r\n                            >   \r\n                                <div \r\n                                    style={{ \r\n                                        width:\"100%\", \r\n                                        color:\"white\",                                        \r\n                                        fontWeight: \"450\",\r\n                                        fontSize: \"20px\",\r\n                                        textAlign: \"center\",\r\n                                        padding: \"10px\"\r\n                                    }}\r\n                                >\r\n                                    {item && item.metadata && item.metadata.name}\r\n                                </div>\r\n                                <img src={item && item.metadata && item.metadata.image && item.metadata.image} alt=\"Evo NFT\" \r\n                                    style={{ width: \"100%\"}}    \r\n                                >                                \r\n                                </img>\r\n                                <div style={{ display:\"flex\", justifyContent:\"space-around\" }}>\r\n                                    <div \r\n                                        style={{ \r\n                                            width:\"40%\", \r\n                                            color:\"white\",                                        \r\n                                            fontWeight: \"450\",\r\n                                            fontSize: \"20px\",\r\n                                            alignItems: \"center\"\r\n                                        }}\r\n                                    >{item.reward} EVO</div>\r\n                                    <div \r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\"\r\n                                        }}\r\n                                    >\r\n                                        <ThemeProvider theme={connectTheme}>\r\n                                            <Button variant=\"contained\" color=\"primary\" className=\"btn_stake\" onClick={() => {onClickUnstake(item.token_id)} }>Unstake</Button>\r\n                                        </ThemeProvider>                                    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Staking;\r\n","import React from 'react';\r\nimport { Router, Location, Redirect } from '@reach/router';\r\nimport ScrollToTopBtn from './menu/ScrollToTop';\r\nimport Header from './menu/header';\r\nimport Home from './pages/home';\r\nimport Staking from './pages/staking';\r\nimport { loadWeb3 } from './interactWithSmartContract';\r\n\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nloadWeb3();\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  :root {\r\n    scroll-behavior: unset;\r\n  }\r\n`;\r\n\r\nexport const ScrollTop = ({ children, location }) => {\r\n  React.useEffect(() => window.scrollTo(0,0), [location])\r\n  return children\r\n}\r\n\r\nconst PosedRouter = ({ children }) => (\r\n  <Location>\r\n    {({ location }) => (\r\n      <div id='routerhang'>\r\n        <div key={location.key}>\r\n          <Router location={location}>\r\n            {children}\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </Location>\r\n);\r\n\r\nconst app= () => (\r\n  <div className=\"wraper\">\r\n  <GlobalStyles />\r\n    <Header/>\r\n      <PosedRouter>\r\n      <ScrollTop path=\"/\">\r\n        <Home exact path=\"/\">\r\n          <Redirect to=\"/home\" />\r\n        </Home>\r\n        {/* <ItemDetailRedux path=\"/ItemDetail/:nftId\" /> */}\r\n        <Staking path=\"/staking\" />\r\n        </ScrollTop>\r\n      </PosedRouter>\r\n    <ScrollToTopBtn />\r\n    <NotificationContainer/>\r\n  </div>\r\n);\r\n\r\nexport default app;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}